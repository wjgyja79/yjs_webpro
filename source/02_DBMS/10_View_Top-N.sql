-- [X] VIEW, IN-LINE VIEW, TOP-N
DROP TABLE EMP1;
CREATE TABLE EMP1 AS SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, DEPTNO FROM EMP;
SELECT * FROM EMP1; -- 타부서에서 권한을 줄 테이블
SELECT * FROM USER_TABLES WHERE TABLE_NAME LIKE 'EMP%';
INSERT INTO EMP1 (EMPNO, ENAME, DEPTNO) VALUES (1111, '홍', 30);
SELECT * FROM EMP1;
SELECT * FROM EMP;
-- 1. VIEW : 가상의 테이블 1 단순뷰 2 복합뷰
-- (1) 단순뷰 : 하나의 테이블을 이용해서 만든 뷰(가상의 테이블 : 물리적인 저장공간과 데이터가 따로 없음)
CREATE OR REPLACE VIEW EMPv0
 AS SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, DEPTNO FROM EMP;
SELECT * FROM EMPv0;
SELECT * FROM EMP;
SELECT * FROM USER_TABLES;
SELECT * FROM USER_TABLES WHERE TABLE_NAME LIKE 'EMP%';
SELECT * FROM USER_VIEWS;
INSERT INTO EMPv0 VALUES (1111, '홍', 'MANAGER', NULL, SYSDATE, 40); -- VIEW에 INSERT
SELECT * FROM EMPv0;
SELECT * FROM EMP;
ROLLBACK;

CREATE OR REPLACE VIEW EMPv0
 AS SELECT * FROM EMP WHERE DEPTNO=30;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', 'MANAGER', NULL, SYSDATE, NULL, NULL, 30);
SELECT * FROM USER_VIEWS;
SELECT * FROM EMP WHERE EMPNO<2000;
INSERT INTO EMPv0 (EMPNO, ENAME, DEPTNO) VALUES (1112, '박', 40); -- 40부서 직원 입력
SELECT * FROM EMPv0;
SELECT * FROM EMP WHERE EMPNO<2000;

-- VIEW의 제한조건
 -- WITH CHECK OPTION 추가 : 뷰의 조건에 해당되는 데이터만 삽입, 수정, 삭제
 -- WITH READ ONLY 추가 : 읽기 전용 뷰

CREATE OR REPLACE VIEW EMPv0
 AS SELECT * FROM EMP WHERE DEPTNO=30
 WITH CHECK OPTION;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 (EMPNO, ENAME, DEPTNO) VALUES (1113, '이', 30); 
INSERT INTO EMPv0 (EMPNO, ENAME, DEPTNO) VALUES (1114, '이', 40); -- 제한조건에 의해 오류
DELETE FROM EMPv0 WHERE EMPNO<2000;
DELETE FROM EMP WHERE EMPNO<2000;
SELECT * FROM EMP;

-- 읽기전용 뷰
CREATE OR REPLACE VIEW EMPv0
 AS SELECT * FROM EMP WHERE DEPTNO=30
 WITH CHECK OPTION;
SELECT * FROM EMPv0;
DELETE FROM EMPv0 WHERE EMPNO<2000;
DELETE FROM EMP WHERE EMPNO<2000;
COMMIT;

CREATE OR REPLACE VIEW EMPv0
 AS SELECT ENAME, JOB FORM EMP;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES ('홍갈', 'MANAGER'); -- EMPNO(PK) NOT NULL 오류

-- (2) 복합뷰 : 2개 이상의 테이블을 이용해서 만든 뷰
2개 이상의 테이블로 구성한 뷰
CREATE OR REPLACE VIEW EMPv0
 AS SELECT EMPNO, ENAME, JOB, DNAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', 'MANAGER', 'SALES'); -- 요류, SELECT만 사용
1개의 테이블로 가상의 필드를 이용한 뷰
CREATE OR REPLACE VIEW EMPv0
 AS SELECT EMPNO, ENAME, SAL, SAL*12 YEAR_SAL FROM EMP;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', 100, 1200); -- 오류, SELECT만 사용

CREATE OR REPLACE VIEW EMPv0 (EMPNO, ENAME, SAL, SAL*12 YEAR_SAL) -- 별칭만 따로
 AS SELECT EMPNO, ENAME, SAL, SAL*12 YEAR_SAL FROM EMP;
SELECT * FROM EMPv0;

CREATE OR REPLACE VIEW EMPv0 (DEPTNO, AVG)
 AS SELECT DEPTNO, ROUND(AVG(SAL)) FROM EMP GROUP BY DEPTNO;

-- 2. INLINE-VIEW : FROM절의 서브쿼리를 INLINE VIEW라 하며, FROM절에 오는 서브쿼리는 VIEW처럼 작용
 -- ex. 급여가 2000을 초과하는 사원의 평균 급여
 SELECT AVG(SAL) FROM EMP WHERE SAL>2000;
 SELECT AVG(SAL) FROM (SELECT SAL FROM EMP WHERE SAL>2000);
 -- ex. 부서 평균 급여보다 급여가 높은 사원의 사번, 이름, 급여, 부서번호 출력
 SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP; -- A
 SELECT DEPTNO, AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO; -- B
 -- A, B EQUI JOIN
 SELECT EMPNO, ENAME, SAL, A.DEPTNO, ROUND(AVGSAL)
  FROM EMP A, (SELECT DEPTNO, AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) B
  WHERE A.DEPTNO=B.DEPTNO AND SAL>AVGSAL;

-- 3. TOP-N구문 (TOP 1~10등, 11~20등, ...)
 -- ROWNUM (테이블로 부터 가져온 순서)
SELECT ROWNUM EMPNO, ENAME FROM EMP;
SELECT ROWNUM EMPNO, ENAME FROM EMP WHERE DEPTNO=20;
 
SELECT ROWNUM ENAME, SAL FROM EMP;
SELECT ROWNUM ENAME, SAL 
 FROM EMP
 ORDER BY SAL;
-- 1등~ 꼴지 등수, 이름, 급여
SELECT ROWNUM RN, ENAME, SAL 
 FROM (SELECT * FROM EMP ORDER BY SAL);
 
-- SAL 기준으로 1등~5등
SELECT ROWNUM RN, ENAME, SAL 
 FROM (SELECT * FROM EMP ORDER BY SAL)
 WHERE ROWNUM BETWEEN 1 AND 5;

-- SAL 기준으로 6등~10등
SELECT ROWNUM RN, ENAME, SAL 
 FROM (SELECT * FROM EMP ORDER BY SAL)
 WHERE ROWNUM BETWEEN 6 AND 10;
 
-- TOP-N
SELECT ENAME, SAL FROM EMP ORDER BY SAL); -- 1
SELECT ROWNUM RN, ENAME, SAL 
 FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL); -- 2
SELECT ROWNUM RN, ENAME, SAL 
 FROM (SELECT ROWNUM RN, ENAME, SAL 
        FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL))
 WHERE RN BETWEEN 6 AND 10;

-- ex. 이름순으로 6번째부터 10번쨰까지 사원의 모든 정보 출력
SELECT * FROM EMP ORDER BY ENAME; -- 1
SELECT ROWNUM RN, A.* 
 FROM (SELECT * FROM EMP ORDER BY ENAME) A; -- 2
SELECT *
 FROM (SELECT ROWNUM RN, A.* 
       FROM (SELECT * FROM EMP ORDER BY ENAME) A)
 WHERE RN BETWEEN 6 AND 10; -- 3 : TOP-N

SELECT * FROM EMP;

--<총 연습문제>
---- 1. 부서명과 사원명을 출력하는 용도의 뷰, DNAME_ENAME_VU 를 작성하시오
CREATE OR REPLACE VIEW DNAME_ENAME_VU ("부서명", "사원명") AS
SELECT D.DNAME, E.ENAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

---- 2. 사원명과 직속상관명을 출력하는 용도의 뷰,  WORKER_MANAGER_VU를 작성하시오
CREATE OR REPLACE VIEW WORKER_MANAGER_VU ("사원명", "직속상관명") AS
SELECT E.ENAME, MGR
FROM EMP E;

---- 3. 부서별 급여합계 등수를 출력하시오(부서번호, 급여합계, 등수). -- 학생 질문
SELECT EANEM, DEPTNO, SUM(SAL), COUNT(W.SAL)+1 등수
FROM EMP, DEPTNO
WHERE W.SAL
GROUP BY E.ENAME
ORDER BY COUNT(W.SAL);

---- 3-1. 부서별 급여합계 등수가 2~3등인 부서번호, 급여합계, 등수를 출력하시오.
SELECT E.ENAME, DEPTNO, SUM(SAL), COUNT(W.SAL)+1 AS 등수
FROM EMP E, EMP W
WHERE E.SAL < W.SAL(+) AND ROWNUM BETWEEN 2 AND 3
GROUP BY E.ENAME
ORDER BY COUNT(W.SAL);


---- 4. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 순으로 정렬하시오
SELECT EMPNO, ENAME, HIREDATE 
 FROM EMP
 ORDER BY HIREDATE DESC;

---- 5. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 5명을 출력하시오
SELECT EMPNO, ENAME, HIREDATE 
 FROM EMP
 ORDER BY HIREDATE
 WHERE ROWNUM BETWEEN 1 AND 5;

---- 6. 사원 테이블에서 사번, 사원명, 입사일을 최신부터 오래된 순으로 6번째로 늦은 사원부터 10번째 사원까지 출력
SELECT EMPNO, ENAME, HIREDATE FROM EMP ORDER BY ENAME;
SELECT ROWNUM RN, A.* 
 FROM (SELECT * FROM EMP ORDER BY ENAME) A; 
SELECT EMPNO, ENAME, HIREDATE
 FROM (SELECT ROWNUM RN, A.* 
       FROM (SELECT EMPNO, ENAME, HIREDATE FROM EMP ORDER BY HIREDATE) A)
 WHERE RN BETWEEN 6 AND 10;



